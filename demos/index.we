<template>
  <div class="container">
    <h3>Weex-plugin-amap demo</h3>
    <weex-amap class="map" id="map2017" scale="true" sdk-key={{keys}} geolocation="true" map-instance={{map}} zoom={{zoom}} center={{pos}} marker={{pointArr}} ></weex-amap>
    <div class="btn-wrap">
      <div onclick="changeCenter" class="btnbox"><text class="btn" >set Center</text></div>
      <div onclick="addPoints" class="btnbox"><text class="btn" >add points</text></div>
    </div>
    
     
  </div>
</template>

<style>
  .container{
    position: relative;
    flex:1;
  }
  .map{
    background-color: #fff;
    flex:1;
  }
  .btn-wrap{
    flex:1;
  }
  .btnbox{
    display: inline-block;
    width: 300;
  }
  .btn{
    margin: 10;
    padding: 10;
    width:240;
    background-color: #1ba1e2;
    border-radius: 10;
    color: #fff; 
    text-align:center;
    cursor: pointer;
    font-size: 18;
  }
</style>

<script>
  
  module.exports = {
    data: {
      keys: {
        h5:'',
        ios: '',
        android: ''
      },
      pos: [116.487, 40.00003],
      zoom: 9, 
      pointArr: [
        {
          position:[116.3944071,39.9278548],
          title: '成都',
        },
        {
          position: [116.4848977,40.0004496],
          title: '故宫',
          icon: 'http://img1.vued.vanthink.cn/vuede9952ac37558a5d32a70c553986bd958.png'
        }
      ],
      map: {},
    },
    
    methods: {
      changeCenter() {
        this.pos = [116.4 + Math.random()*0.5,40.25 + Math.random()*0.25];
      },
      
      increaseZoom() {
        if(this.zoom <= 16) {
          this.zoom ++; 
        }
      },
      
      decreaseZoom() {
        if(this.zoom >= 3) {
          this.zoom --; 
        }
      },
        
      addPoints() {
        const coor = [115.9 + Math.random()*1,39.5 + Math.random()*0.5];
        this.pointArr.push({
          position:coor,
          title:'坐标:' + coor.join(','),
          icon: 'http://img1.vued.vanthink.cn/vueda7829f6ffa616b9d3b83413204d08ce1.png'  
        });
        this.pointArr = Array.from(this.pointArr);
      },
      
      removePoints() {
        this.pointArr.pop();
        this.pointArr = Array.from(this.pointArr);
        console.log(this.mapInstance);
      }
      
    },
    
    created () {
     // console.log(this.$vm('map2017'));
    },
    
  }
</script>
